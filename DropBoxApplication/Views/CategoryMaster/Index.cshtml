@model DropBoxApplication.Models.CategoryMasterModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

@using (Html.BeginForm("AddNewCategory", "CategoryMaster", FormMethod.Post, new { role = "form", enctype = "multipart/form-data" }))
{
    <div class="panel panel-default">
        <div class="panel-heading">Category Master</div>
        <div class="panel-body">
            <div class="col-sm-12 ">
                @Html.HiddenFor(model => model.CategoryId, new { id = "CategoryId" })
                @{var StoreId = Session["StoreId"] != null ? Convert.ToInt32(Session["StoreId"]) : 0;}
                @if (StoreId == 0)
                {
                    <div class="row">
                        <div class="col-lg-3">
                            @Html.DropDownListFor(model => model.StoreName, (IEnumerable<SelectListItem>)ViewBag.StoreList, new { id = "StoreName", @class = "form-group form-control" })
                            @Html.ValidationMessageFor(model => model.StoreName, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-lg-3">
                            @Html.DropDownList("MenuName", (IEnumerable<SelectListItem>)ViewBag.MenuList, new { id = "MenuName", @class = "form-group form-control" })
                            @Html.ValidationMessageFor(model => model.MenuName, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-lg-3">
                            @Html.TextBoxFor(model => model.CategoryName, new { id = "CategoryName", @class = "form-group form-control", placeholder = "Category Name" })
                            @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-lg-3">
                            @Html.TextBoxFor(model => model.CategoryDescription, new { id = "CategoryDescription", @class = "form-group form-control", placeholder = "Description" })
                            @Html.ValidationMessageFor(model => model.CategoryDescription, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-3">
                            <div class="form-group form-control btn btn-default image-preview-input">
                                <input type="file" id="file" name="file" />
                            </div>
                        </div>
                        <div class="col-lg-7">
                        </div>
                        <div class="col-lg-1">
                            <input type="submit" value="Add" class="form-group form-control btn btn-default" />
                        </div>
                        <div class="col-lg-1">
                            <input type="reset" value="Reset" class="form-group form-control btn btn-default" />
                        </div>
                    </div>
                }
                else
                {
                    <div class="row">
                        @*<div class="col-lg-3">
                                @Html.DropDownListFor(model => model.StoreName, (IEnumerable<SelectListItem>)ViewBag.StoreList, new { id = "StoreName", @class = "form-group form-control" })
                                @Html.ValidationMessageFor(model => model.StoreName, "", new { @class = "text-danger" })
                            </div>*@
                        <div class="col-lg-3">
                            @Html.DropDownList("MenuName", (IEnumerable<SelectListItem>)ViewBag.MenuList, new { id = "MenuName", @class = "form-group form-control" })
                            @Html.ValidationMessageFor(model => model.MenuName, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-lg-3">
                            @Html.TextBoxFor(model => model.CategoryName, new { id = "CategoryName", @class = "form-group form-control", placeholder = "Category Name" })
                            @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-lg-3">
                            @Html.TextBoxFor(model => model.CategoryDescription, new { id = "CategoryDescription", @class = "form-group form-control", placeholder = "Description" })
                            @Html.ValidationMessageFor(model => model.CategoryDescription, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-lg-3">
                            <div class="form-group form-control btn btn-default image-preview-input">
                                <input type="file" id="file" name="file" />
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-10">
                        </div>
                        <div class="col-lg-1">
                            <input type="submit" value="Add" class="form-group form-control btn btn-default" onclick="refreshdata()" />
                        </div>
                        <div class="col-lg-1">
                            <input type="reset" value="Reset" class="form-group form-control btn btn-default" />
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
    <div class="panel panel-default">
        <div class="panel-heading">Categories Records</div>
        <div class="panel-body">
            <div class="col-sm-12 ">
                <div id="partial-load"></div>
            </div>
        </div>
    </div>
                    }
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function refreshdata() {
            $.ajax({
                type: 'GET',
                url: '/CategoryMaster/GetAllCategoryList',
                dataType: 'json',
                //data: qry,
                traditional: true,
                async: true,
                success: function (Results) {
                    if (Results != null) {
                        $('#partial-load').empty().append(Results);
                        //statesProgress.hide();
                    }
                },
                error: function (Results) {
                    if (Results != null) {
                        $(this).button('loading').delay(1000).queue(function () {
                            $('#partial-load').empty().append(Results.responseText);
                            //statesProgress.hide();
                            $('#btnExport').show(); $('#filter').show();
                            $(this).button('complete');
                            $(this).dequeue();
                        });

                    }
                }
            });
        }
        $(document).ready(function () {
            //$('#MenuName').change(function () {
            //    debugger
            //    var strMenuName = $('#MenuName option:selected').val();
            //    var qry = {
            //        MenuName: strMenuName,
            //    };
            //var $ddFeName = $('#FieldExective');
            //$ddFeName.empty(); // Clear all Items
            //$ddFeName.append($("<option></option>").val('').html('Please Wait...'));
            $.ajax({
                type: 'GET',
                url: '/CategoryMaster/GetAllCategoryList',
                dataType: 'json',
                //data: qry,
                traditional: true,
                async: true,
                success: function (Results) {
                    if (Results != null) {
                        $('#partial-load').empty().append(Results);
                        //statesProgress.hide();
                    }
                },
                error: function (Results) {
                    if (Results != null) {
                        $(this).button('loading').delay(1000).queue(function () {
                            $('#partial-load').empty().append(Results.responseText);
                            //statesProgress.hide();
                            $('#btnExport').show(); $('#filter').show();
                            $(this).button('complete');
                            $(this).dequeue();
                        });

                    }
                }
            });
        });
        //});
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#StoreName').change(function () {
                var strStoreId = 0;
                @{var StoreId = Session["StoreId"] != null ? Convert.ToInt32(Session["StoreId"]) : 0;}
                strStoreId = @StoreId;
                if(strStoreId == 0 ){
                    strStoreId = $('#StoreName option:selected').val();
                    var qry = {
                        StoreId: strStoreId,
                    };
                }
                else{
                    var qry = {
                        StoreId: strStoreId,
                    };
                }
                var $ddMenuName = $('#MenuName');
                $ddMenuName.empty(); // Clear all Items
                $ddMenuName.append($("<option></option>").val('').html('Please Wait...'));
                $.ajax({
                    url: '@Url.Action("FindMenuListByStore", "CategoryMaster")',
                    type: 'GET',
                    dataType: 'json',
                    data: qry,
                    traditional: true,
                    async: true,
                    success: function (d) {
                        $ddMenuName.empty(); // Clear all Items
                        $ddMenuName.append($("<option></option>").val('').html('Select Menu Name'));
                        //$ddMenuName.append($("<option></option>").val('0').html('All'));
                        //$ddMenuName.append($("<option></option>").val(item.MenuId).html(item.MenuName));
                        $.each(d, function (i, item) {
                            //$ddMenuName.append($("<option></option>").val(item).html(item));
                            $ddMenuName.append($('<option value=' + item.Value + '>' + item.Text + '</option>'));
                        });
                        //$.each(data, function () {
                        //    $("#MenuName").append($("<option>                     </option>").val(this['ITEMID']).html(this['ITEMDESC']));
                    },
                    error: function (d) {
                        alert('Error!');
                    }
                });
            });
        });
    </script>
    <style type="text/css">
        table#pruebatabla th,
        table#pruebatabla td {
            white-space: nowrap;
            padding: 3px 6px;
            word-wrap: break-word;
            overflow: hidden;
            /*overflow-x: auto;*/
        }
    </style>
}

<script type="text/javascript">
    //$(document).ready(function () {
    //    $('#StoreName').change(function () {
    //            debugger
    //            var strStoreName = $('#StoreName option:selected').val();
    //            var qry = {
    //                StoreName: strStoreName,
    //            };
    //            //var $ddFeName = $('#FieldExective');
    //            //$ddFeName.empty(); // Clear all Items
    //            //$ddFeName.append($("<option></option>").val('').html('Please Wait...'));
    //           $.ajax({
    //            type: 'Post',
    //            url: '/MenuSetupMaster/GetAllMenuList',
    //            dataType: 'json',
    //            data:qry,
    //            traditional: true,
    //            async: true,
    //            success: function (Results) {
    //                if (Results != null) {
    //                    $('#partial-load').empty().append(Results); statesProgress.hide();
    //                }
    //            },
    //            error: function (Results) {
    //                if (Results != null) {
    //                    $(this).button('loading').delay(1000).queue(function () {
    //                        $('#partial-load').empty().append(Results.responseText);
    //                        statesProgress.hide();
    //                        $('#btnExport').show(); $('#filter').show();
    //                        $(this).button('complete');
    //                        $(this).dequeue();
    //                    });

    //                }
    //            }
    //        });
    //        });
    //    });
</script>




